{"version":3,"file":"static/js/506.7f083373.chunk.js","mappings":"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","sources":["webpack://your-pet-frontend/./src/modules/RegisterForm/registerFormDetails.module.css?8126","modules/RegisterForm/RegisterFormDetails.jsx","modules/RegisterForm/RegisterForm.jsx","pages/RegisterPage/RegisterPage.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"form\":\"registerFormDetails_form__wOm+e\",\"title\":\"registerFormDetails_title__pAFRD\",\"questionText\":\"registerFormDetails_questionText__V7bgL\",\"loginLink\":\"registerFormDetails_loginLink__yz5Gz\",\"buttonContainer\":\"registerFormDetails_buttonContainer__5y6Jx\",\"button\":\"registerFormDetails_button__VJfUX\"};","import { useState } from 'react';\nimport { Link, useNavigate } from 'react-router-dom';\nimport { useDispatch } from 'react-redux';\n\nimport { Formik, Form } from 'formik';\nimport * as yup from 'yup';\n\nimport { TextField, IconButton, Box } from '@mui/material';\nimport { Visibility, VisibilityOff } from '@mui/icons-material';\nimport { blue } from '@mui/material/colors';\n\nimport css from './registerFormDetails.module.css';\n\nimport { register } from 'redux/auth/auth-operations';\n\nconst registerSchema = yup.object().shape({\n  name: yup.string().required('Name is required'),\n  email: yup.string().email('Invalid email').required('Email is required'),\n  password: yup\n    .string()\n    .required('Password is required')\n    .min(6, 'Password must be at least 6 characters')\n    .max(16, 'Password must be at most 16 characters')\n    .matches(\n      /^(?=.*[0-9])(?=.*[a-z])(?=.*[A-Z])([0-9a-zA-Z]{6,})*$/,\n      'Password must contain at least one uppercase letter, one lowercase letter, and one digit'\n    ),\n  confirmPassword: yup\n    .string()\n    .required('Confirm password is required')\n    .oneOf([yup.ref('password'), null], 'Passwords must match'),\n});\n\nconst data = {\n  name: '',\n  email: '',\n  password: '',\n  confirmPassword: '',\n};\n\nexport const RegisterFormDetails = () => {\n  const [showPassword, setShowPassword] = useState(false);\n  const [showConfirmPassword, setShowConfirmPassword] = useState(false);\n\n  const navigate = useNavigate();\n\n  const handleClickShowPassword = () => setShowPassword(show => !show);\n  const handleClickShowConfirmPassword = () =>\n    setShowConfirmPassword(show => !show);\n\n  const dispatch = useDispatch();\n  const handleFormSubmit = async values => {\n    // console.log(values);\n    const data = {\n      name: values.name,\n      email: values.email,\n      password: values.password,\n    };\n    await dispatch(register(data));\n    navigate('/user');\n  };\n\n  return (\n    <>\n      <Formik\n        initialValues={data}\n        onSubmit={handleFormSubmit}\n        validationSchema={registerSchema}\n      >\n        {({ values, errors, touched, handleSubmit, handleChange }) => (\n          <Form className={css.form} onSubmit={handleSubmit}>\n            <h2 className={css.title}>Registration</h2>\n            <Box\n              sx={{\n                marginBottom: '10px',\n                display: 'flex',\n                alignItems: 'flex-end',\n              }}\n            >\n              <TextField\n                name=\"name\"\n                type=\"text\"\n                label=\"Name\"\n                size=\"small\"\n                fullWidth\n                sx={{\n                  '.MuiInputBase-root.MuiOutlinedInput-root': {\n                    borderRadius: '40px',\n                  },\n                  '& .MuiOutlinedInput-root': {\n                    '& fieldset': {\n                      borderRadius: 40,\n                      border: `1px solid #54ADFF`,\n                    },\n                  },\n                }}\n                onChange={handleChange}\n                value={values.name}\n                error={touched.name && Boolean(errors.name)}\n                helperText={touched.name && errors.name}\n              />\n            </Box>\n            <Box\n              sx={{\n                marginBottom: '10px',\n                display: 'flex',\n                alignItems: 'flex-end',\n              }}\n            >\n              <TextField\n                name=\"email\"\n                type=\"email\"\n                label=\"Email\"\n                size=\"small\"\n                fullWidth\n                sx={{\n                  '.MuiInputBase-root.MuiOutlinedInput-root': {\n                    borderRadius: '40px',\n                  },\n                  '& .MuiOutlinedInput-root': {\n                    '& fieldset': {\n                      borderRadius: 40,\n                      border: `1px solid #54ADFF`,\n                    },\n                  },\n                }}\n                onChange={handleChange}\n                value={values.email}\n                error={touched.email && Boolean(errors.email)}\n                helperText={touched.email && errors.email}\n              />\n            </Box>\n            <Box\n              sx={{\n                marginBottom: '10px',\n                display: 'flex',\n                alignItems: 'flex-end',\n              }}\n            >\n              <TextField\n                name=\"password\"\n                type={showPassword ? 'text' : 'password'}\n                label=\"Password\"\n                size=\"small\"\n                fullWidth\n                sx={{\n                  '& .MuiOutlinedInput-root': {\n                    '& fieldset': {\n                      borderRadius: 40,\n                      border: `1px solid #54ADFF`,\n                    },\n                  },\n                }}\n                InputProps={{\n                  endAdornment: (\n                    <IconButton\n                      aria-label=\"toggle password visibility\"\n                      onClick={handleClickShowPassword}\n                      edge=\"end\"\n                      size=\"small\"\n                    >\n                      {showPassword ? (\n                        <Visibility style={{ color: blue[300] }} />\n                      ) : (\n                        <VisibilityOff style={{ color: blue[300] }} />\n                      )}\n                      {}\n                    </IconButton>\n                  ),\n                }}\n                onChange={handleChange}\n                value={values.password}\n                error={touched.password && Boolean(errors.password)}\n                helperText={touched.password && errors.password}\n              />\n            </Box>\n            <Box\n              sx={{\n                marginBottom: '10px',\n                display: 'flex',\n                alignItems: 'flex-end',\n              }}\n            >\n              <TextField\n                name=\"confirmPassword\"\n                type={showConfirmPassword ? 'text' : 'password'}\n                label=\"Confirm password\"\n                size=\"small\"\n                fullWidth\n                sx={{\n                  '& .MuiOutlinedInput-root': {\n                    '& fieldset': {\n                      borderRadius: 40,\n                      border: `1px solid #54ADFF`,\n                    },\n                  },\n                }}\n                InputProps={{\n                  endAdornment: (\n                    <IconButton\n                      aria-label=\"toggle password visibility\"\n                      onClick={handleClickShowConfirmPassword}\n                      edge=\"end\"\n                      size=\"small\"\n                    >\n                      {showConfirmPassword ? (\n                        <Visibility style={{ color: blue[300] }} />\n                      ) : (\n                        <VisibilityOff style={{ color: blue[300] }} />\n                      )}\n                    </IconButton>\n                  ),\n                }}\n                onChange={handleChange}\n                value={values.confirmPassword}\n                error={\n                  touched.confirmPassword && Boolean(errors.confirmPassword)\n                }\n                helperText={touched.confirmPassword && errors.confirmPassword}\n              />\n            </Box>\n            <div className={css.buttonContainer}>\n              <button type=\"submit\" className={css.button}>\n                Registration\n              </button>\n            </div>\n            <p className={css.questionText}>\n              Already have an account?{' '}\n              <Link to=\"/login\" className={css.loginLink}>\n                Login\n              </Link>\n            </p>\n          </Form>\n        )}\n      </Formik>\n    </>\n  );\n};\n","import { RegisterFormDetails } from './RegisterFormDetails';\n\nconst RegisterForm = () => {\n  return (\n    <>\n      <RegisterFormDetails />\n    </>\n  );\n};\n\nexport default RegisterForm;\n","import RegisterForm from 'modules/RegisterForm/RegisterForm';\n\nconst RegisterPage = () => {\n\n  return (\n    <>\n      <RegisterForm/>\n    </>\n  );\n};\n\nexport default RegisterPage;"],"names":["registerSchema","yup","shape","name","required","email","password","min","max","matches","confirmPassword","oneOf","data","RegisterFormDetails","useState","showPassword","setShowPassword","showConfirmPassword","setShowConfirmPassword","navigate","useNavigate","handleClickShowPassword","show","handleClickShowConfirmPassword","dispatch","useDispatch","handleFormSubmit","values","register","initialValues","onSubmit","validationSchema","errors","touched","handleSubmit","handleChange","className","css","Box","sx","marginBottom","display","alignItems","TextField","type","label","size","fullWidth","borderRadius","border","onChange","value","error","Boolean","helperText","InputProps","endAdornment","IconButton","onClick","edge","Visibility","style","color","blue","VisibilityOff","to"],"sourceRoot":""}