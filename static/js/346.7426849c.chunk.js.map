{"version":3,"file":"static/js/346.7426849c.chunk.js","mappings":"yUACA,EAAuB,+BAAvB,EAA8D,gCAA9D,EAA6G,uCAA7G,EAAmK,uCAAnK,EAA4N,0CAA5N,EAA+Q,iC,oBCezQA,EAAiBC,EAAAA,GAAW,CAChCC,MAAOD,EAAAA,KAAaC,MAAM,iBAAiBC,SAAS,uBACpDC,SAAUH,EAAAA,KAEPE,SAAS,wBACTE,IAAI,EAAG,0CACPC,IAAI,GAAI,0CACRC,QACC,wDACA,8FAIAC,EAAO,CACXN,MAAO,GACPE,SAAU,IAGCK,EAAmB,WAC9B,IAAMC,GAAWC,EAAAA,EAAAA,MACjB,GAAwCC,EAAAA,EAAAA,WAAS,GAAjD,eAAOC,EAAP,KAAqBC,EAArB,KAEMC,EAA0B,kBAAMD,GAAgB,SAAAE,GAAI,OAAKA,CAAL,GAA1B,EAE1BC,GAAWC,EAAAA,EAAAA,MAEXC,EAAgB,mCAAG,WAAMC,GAAN,8EACjBZ,EAAO,CACXN,MAAOkB,EAAOlB,MACdE,SAAUgB,EAAOhB,UAHI,SAKjBa,GAASI,EAAAA,EAAAA,IAAMb,IALE,OAMvBE,EAAS,SANc,2CAAH,sDAStB,OACE,+BACE,SAAC,KAAD,CACEY,cAAed,EACfe,SAAUJ,EACVK,iBAAkBxB,EAHpB,SAKG,gBAAGoB,EAAH,EAAGA,OAAQK,EAAX,EAAWA,OAAQC,EAAnB,EAAmBA,QAASC,EAA5B,EAA4BA,aAAcC,EAA1C,EAA0CA,aAA1C,OACC,UAAC,KAAD,CAAMC,UAAWC,EAAUP,SAAUI,EAArC,WACE,eAAIE,UAAWC,EAAf,oBACA,SAACC,EAAA,EAAD,CACEC,GAAI,CACFC,aAAc,OACdC,QAAS,OACTC,WAAY,YAJhB,UAOE,SAACC,EAAA,EAAD,CACEC,KAAK,QACLC,KAAK,QACLC,MAAM,QACNC,KAAK,QACLC,WAAS,EACTT,GAAI,CACF,2CAA4C,CAC1CU,aAAc,QAEhB,2BAA4B,CAC1B,aAAc,CACZA,aAAc,GACdC,OAAO,qBAET,mBAAoB,CAClBC,YAAa,WAEf,yBAA0B,CACxBA,YAAa,UACbC,YAAa,SAInBC,SAAUlB,EACVmB,MAAO3B,EAAOlB,MACd8C,MAAOtB,EAAQxB,OAAS+C,QAAQxB,EAAOvB,OACvCgD,WAAYxB,EAAQxB,OAASuB,EAAOvB,WAGxC,SAAC6B,EAAA,EAAD,CACEC,GAAI,CACFC,aAAc,OACdC,QAAS,OACTC,WAAY,YAJhB,UAOE,SAACC,EAAA,EAAD,CACEC,KAAK,WACLC,KAAMzB,EAAe,OAAS,WAC9B0B,MAAM,WACNC,KAAK,QACLC,WAAS,EACTT,GAAI,CACF,2CAA4C,CAC1CU,aAAc,QAEhB,2BAA4B,CAC1B,aAAc,CACZA,aAAc,GACdC,OAAO,qBAET,mBAAoB,CAClBC,YAAa,WAEf,yBAA0B,CACxBA,YAAa,UACbC,YAAa,SAInBM,WAAY,CACVC,cACE,SAACC,EAAA,EAAD,CACE,aAAW,6BACXC,QAASvC,EACTwC,KAAK,MACLf,KAAK,QAJP,SAMG3B,GACC,SAAC2C,EAAA,EAAD,CAAYC,MAAO,CAAEC,MAAOC,EAAAA,EAAAA,SAE5B,SAACC,EAAA,EAAD,CAAeH,MAAO,CAAEC,MAAOC,EAAAA,EAAAA,WAMvCb,SAAUlB,EACVmB,MAAO3B,EAAOhB,SACd4C,MAAOtB,EAAQtB,UAAY6C,QAAQxB,EAAOrB,UAC1C8C,WAAYxB,EAAQtB,UAAYqB,EAAOrB,cAG3C,gBAAKyB,UAAWC,EAAhB,UACE,mBAAQQ,KAAK,SAAST,UAAWC,EAAjC,sBAIF,eAAGD,UAAWC,EAAd,mCACyB,KACvB,SAAC,KAAD,CAAM+B,GAAG,YAAYhC,UAAWC,EAAhC,2BArGL,KA8GR,EC9JD,EARkB,WAChB,OACE,+BACE,SAACrB,EAAD,KAGL,ECPD,EAAyB,0BCqBzB,EAjBkB,WAUhB,OATAqD,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAOC,SAASC,cAAc,QAGpC,OAFAF,EAAKG,UAAUC,IAAIrC,GAEZ,WACLiC,EAAKG,UAAUE,OAAOtC,EACvB,CACF,GAAE,KAGD,+BACE,SAAC,EAAD,KAGL,C","sources":["webpack://your-pet-frontend/./src/modules/LoginForm/loginFormDetails.module.css?1418","modules/LoginForm/LoginFormDetails.jsx","modules/LoginForm/LoginForm.jsx","webpack://your-pet-frontend/./src/pages/LoginPage/LoginPage.module.css?f8e0","pages/LoginPage/LoginPage.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"form\":\"loginFormDetails_form__LwEfY\",\"title\":\"loginFormDetails_title__T9-5m\",\"questionText\":\"loginFormDetails_questionText__n6Ojt\",\"registerLink\":\"loginFormDetails_registerLink__jYgjs\",\"buttonContainer\":\"loginFormDetails_buttonContainer__TyGgH\",\"button\":\"loginFormDetails_button__WhIag\"};","import { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { useDispatch } from 'react-redux';\nimport { useNavigate } from 'react-router-dom';\n\nimport { Formik, Form } from 'formik';\nimport * as yup from 'yup';\n\nimport { TextField, IconButton, Box } from '@mui/material';\nimport { Visibility, VisibilityOff } from '@mui/icons-material';\nimport { blue } from '@mui/material/colors';\n\nimport css from './loginFormDetails.module.css';\n\nimport { login } from 'redux/auth/auth-operations';\n\nconst registerSchema = yup.object({\n  email: yup.string().email('Invalid email').required('Enter a valid Email'),\n  password: yup\n    .string()\n    .required('Password is required')\n    .min(6, 'Password must be at least 6 characters')\n    .max(16, 'Password must be at most 16 characters')\n    .matches(\n      /^(?=.*[0-9])(?=.*[a-z])(?=.*[A-Z])([0-9a-zA-Z]{6,})*$/,\n      'Password must contain at least one uppercase letter, one lowercase letter, and one digit'\n    ),\n});\n\nconst data = {\n  email: '',\n  password: '',\n};\n\nexport const LoginFormDetails = () => {\n  const navigate = useNavigate();\n  const [showPassword, setShowPassword] = useState(false);\n\n  const handleClickShowPassword = () => setShowPassword(show => !show);\n\n  const dispatch = useDispatch();\n\n  const handleFormSubmit = async values => {\n    const data = {\n      email: values.email,\n      password: values.password,\n    };\n    await dispatch(login(data));\n    navigate('/user');\n  };\n\n  return (\n    <>\n      <Formik\n        initialValues={data}\n        onSubmit={handleFormSubmit}\n        validationSchema={registerSchema}\n      >\n        {({ values, errors, touched, handleSubmit, handleChange }) => (\n          <Form className={css.form} onSubmit={handleSubmit}>\n            <h2 className={css.title}>Login</h2>\n            <Box\n              sx={{\n                marginBottom: '10px',\n                display: 'flex',\n                alignItems: 'flex-end',\n              }}\n            >\n              <TextField\n                name=\"email\"\n                type=\"email\"\n                label=\"Email\"\n                size=\"small\"\n                fullWidth\n                sx={{\n                  '.MuiInputBase-root.MuiOutlinedInput-root': {\n                    borderRadius: '40px',\n                  },\n                  '& .MuiOutlinedInput-root': {\n                    '& fieldset': {\n                      borderRadius: 40,\n                      border: `1px solid #54ADFF`,\n                    },\n                    '&:hover fieldset': {\n                      borderColor: '#54ADFF',\n                    },\n                    '&.Mui-focused fieldset': {\n                      borderColor: '#54ADFF',\n                      borderWidth: '2px',\n                    },\n                  },\n                }}\n                onChange={handleChange}\n                value={values.email}\n                error={touched.email && Boolean(errors.email)}\n                helperText={touched.email && errors.email}\n              />\n            </Box>\n            <Box\n              sx={{\n                marginBottom: '10px',\n                display: 'flex',\n                alignItems: 'flex-end',\n              }}\n            >\n              <TextField\n                name=\"password\"\n                type={showPassword ? 'text' : 'password'}\n                label=\"Password\"\n                size=\"small\"\n                fullWidth\n                sx={{\n                  '.MuiInputBase-root.MuiOutlinedInput-root': {\n                    borderRadius: '40px',\n                  },\n                  '& .MuiOutlinedInput-root': {\n                    '& fieldset': {\n                      borderRadius: 40,\n                      border: `1px solid #54ADFF`,\n                    },\n                    '&:hover fieldset': {\n                      borderColor: '#54ADFF',\n                    },\n                    '&.Mui-focused fieldset': {\n                      borderColor: '#54ADFF',\n                      borderWidth: '2px',\n                    },\n                  },\n                }}\n                InputProps={{\n                  endAdornment: (\n                    <IconButton\n                      aria-label=\"toggle password visibility\"\n                      onClick={handleClickShowPassword}\n                      edge=\"end\"\n                      size=\"small\"\n                    >\n                      {showPassword ? (\n                        <Visibility style={{ color: blue[300] }} />\n                      ) : (\n                        <VisibilityOff style={{ color: blue[300] }} />\n                      )}\n                      {}\n                    </IconButton>\n                  ),\n                }}\n                onChange={handleChange}\n                value={values.password}\n                error={touched.password && Boolean(errors.password)}\n                helperText={touched.password && errors.password}\n              />\n            </Box>\n            <div className={css.buttonContainer}>\n              <button type=\"submit\" className={css.button}>\n                Login\n              </button>\n            </div>\n            <p className={css.questionText}>\n              Don't have an account?{' '}\n              <Link to=\"/register\" className={css.registerLink}>\n                Register\n              </Link>\n            </p>\n          </Form>\n        )}\n      </Formik>\n    </>\n  );\n};\n","import { LoginFormDetails } from './LoginFormDetails';\n\nconst LoginForm = () => {\n  return (\n    <>\n      <LoginFormDetails />\n    </>\n  );\n};\n\nexport default LoginForm;\n","// extracted by mini-css-extract-plugin\nexport default {\"bodyBg\":\"LoginPage_bodyBg__TrH8m\"};","//import LoginForm from '../../modules/LoginForm/LoginForm';\nimport { useEffect } from 'react';\nimport LoginForm from 'modules/LoginForm/LoginForm';\nimport css from './LoginPage.module.css';\n\nconst LoginPage = () => {\n  useEffect(() => {\n    const body = document.querySelector('body');\n    body.classList.add(css.bodyBg);\n\n    return () => {\n      body.classList.remove(css.bodyBg);\n    };\n  }, []);\n\n  return (\n    <>\n      <LoginForm />\n    </>\n  );\n};\n\nexport default LoginPage;\n\n"],"names":["registerSchema","yup","email","required","password","min","max","matches","data","LoginFormDetails","navigate","useNavigate","useState","showPassword","setShowPassword","handleClickShowPassword","show","dispatch","useDispatch","handleFormSubmit","values","login","initialValues","onSubmit","validationSchema","errors","touched","handleSubmit","handleChange","className","css","Box","sx","marginBottom","display","alignItems","TextField","name","type","label","size","fullWidth","borderRadius","border","borderColor","borderWidth","onChange","value","error","Boolean","helperText","InputProps","endAdornment","IconButton","onClick","edge","Visibility","style","color","blue","VisibilityOff","to","useEffect","body","document","querySelector","classList","add","remove"],"sourceRoot":""}